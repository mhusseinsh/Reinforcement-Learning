import unittest
import numpy as np
import sys
if "../../" not in sys.path:
  sys.path.append("../../")
from lib.envs.blackjack import BlackjackEnv
from lib.envs.cliff_walking import CliffWalkingEnv
if "../" not in sys.path:
  sys.path.append("../")
from scripts.q_learning import q_learning
from scripts.off_policy_mc import create_random_policy, mc_control_importance_sampling

class TestMCControl(unittest.TestCase):
  def test_q_values(self):
    np.random.seed(0)
    env = BlackjackEnv(test=True)
    expected_q_values = {(20, 10, False): [0.42653629, -0.85137896],
                         (19, 10, False): [-0.02013252, -0.76043374],
                         (17, 3, True): [-0.15081967, -0.07894737],
                         (15, 3, True): [-0.21673004, 0.13445378],
                         (18, 7, False): [0.40237271, -0.63797344],
                         (21, 9, True): [0.93568282, 0.16824197],
                         (13, 5, False): [-0.15663717, -0.21522556],
                         (17, 7, False): [-0.13629842, -0.46711799],
                         (21, 4, False): [0.8795082, -1],
                         (20, 6, False): [0.69661017, -0.85522788],
                         (16, 5, False): [-0.14742968, -0.44858963],
                         (20, 2, False): [0.6546496 , -0.85157574],
                         (17, 10, False): [-0.46789976, -0.60403235],
                         (18, 10, False): [-0.24513761, -0.6528643 ],
                         (13, 10, False): [-0.57374784, -0.45138657],
                         (21, 3, False): [0.88694992, -1 ],
                         (12, 3, False): [-0.2414734 , -0.26044111],
                         (20, 1, False): [0.13951866, -0.87512656],
                         (19, 6, False): [0.46933604, -0.72925311],
                         (20, 3, False): [0.67558639, -0.86028641],
                         (16, 6, False): [-0.17843511, -0.40703971],
                         (16, 8, False): [-0.52589074, -0.45258216],
                         (15, 6, False): [-0.13355049, -0.38839075],
                         (14, 10, False): [-0.57596765, -0.50464747],
                         (15, 2, False): [-0.31378836, -0.34506089],
                         (12, 10, False): [-0.58224543, -0.40539938],
                         (13, 9, False): [-0.5435874, -0.3305823],
                         (16, 9, False): [-0.53687177, -0.47911779],
                         (18, 5, False): [0.1987397 , -0.61293303],
                         (16, 4, False): [-0.19521531, -0.4241396 ],
                         (19, 3, False): [0.3997086 , -0.72199593],
                         (20, 7, True): [0.78384798, 0.36746988],
                         (20, 4, True): [0.65536723, 0.22459893],
                         (16, 3, False): [-0.23179438, -0.46685742],
                         (15, 4, True): [-0.21235521, -0.04],
                         (20, 7, False): [0.78619986, -0.84657162],
                         (17, 6, False): [0.02079304, -0.51646192],
                         (12, 2, True): [-0.24, -0.01639344],
                         (12, 8, False): [-0.52924919, -0.22144522],
                         (16, 10, False): [-0.57152714, -0.56249275],
                         (13, 5, True): [-0.1512605 , 0.18881119],
                         (16, 2, False): [-0.29238329, -0.48165793],
                         (13, 2, False): [-0.30406654, -0.32038835],
                         (13, 2, True): [-0.25409836, 0.1],
                         (17, 8, False): [-0.41231527, -0.47239863],
                         (20, 4, False): [0.66433333, -0.86905582],
                         (21, 8, True): [0.94553991, 0.18217054],
                         (14, 6, True): [-0.15481172, 0.03278689],
                         (14, 1, False): [-0.76679104, -0.56170599],
                         (18, 8, False): [0.11342155, -0.59509202],
                         (14, 2, False): [-0.28084715, -0.38403401],
                         (18, 4, False): [0.175, -0.64781112],
                         (21, 10, False): [0.8935025, -1],
                         (17, 9, False): [-0.44423792, -0.51552211],
                         (12, 9, False): [-0.53635963, -0.32246696],
                         (18, 9, False): [-0.17900932, -0.63939106],
                         (20, 5, False): [0.68058884, -0.87318456],
                         (15, 10, False): [-0.58514219, -0.52527221],
                         (15, 8, False): [-0.49362305, -0.4103512 ],
                         (16, 3, True): [-0.2183908 , -0.03550296],
                         (20, 9, False): [0.76321353, -0.84386371],
                         (18, 6, False): [0.29852217, -0.61204013],
                         (18, 2, False): [0.13370333, -0.63681102],
                         (19, 2, True): [0.42363112, 0.13173653],
                         (21, 7, False): [0.92793522, -1 ],
                         (13, 6, False): [-0.13333333, -0.16909091],
                         (12, 6, False): [-0.1791801 , -0.20747834],
                         (12, 4, True): [-0.10077519, 0.05],
                         (21, 1, False): [0.65166796, -1 ],
                         (20, 8, False): [0.78742819, -0.86836664],
                         (14, 8, False): [-0.51183295, -0.35818908],
                         (15, 5, False): [-0.14711359, -0.41148776],
                         (21, 9, False): [0.94867682, -1 ],
                         (16, 1, True): [-0.78807947, -0.43410853],
                         (21, 5, False): [0.88740157, -1 ],
                         (17, 5, False): [-0.04469005, -0.50268162],
                         (13, 7, False): [-0.49887539, -0.32030505],
                         (16, 10, True): [-0.56377079, -0.19230769],
                         (19, 4, False): [0.41581109, -0.7174866 ],
                         (18, 3, False): [0.13952358, -0.59920239],
                         (16, 1, False): [-0.75461866, -0.64173592],
                         (19, 2, False): [0.3980021 , -0.73488147],
                         (13, 4, False): [-0.19401632, -0.29454879],
                         (13, 3, False): [-0.26629936, -0.34216336],
                         (14, 4, False): [-0.212678 , -0.30889584],
                         (19, 8, False): [0.62740266, -0.72606775],
                         (18, 1, True): [-0.3713355 , -0.40243902],
                         (16, 4, True): [-0.08208955, 0.17931034],
                         (18, 1, False): [-0.35166425, -0.72090777],
                         (21, 5, True): [0.88111218, 0.26565465],
                         (14, 5, False): [-0.14150047, -0.36225196],
                         (17, 1, False): [-0.60807484, -0.66408739],
                         (15, 9, False): [-0.55004677, -0.46949842],
                         (16, 2, True): [-0.3129771, -0.0137931],
                         (13, 7, True): [-0.50434783, 0.09230769],
                         (15, 4, False): [-0.22837529, -0.41237113],
                         (12, 7, False): [-0.48350198, -0.19600726],
                         (12, 7, True): [-0.36065574, -0.05172414],
                         (14, 5, True): [-0.25957447, 0.28070175],
                         (12, 2, False): [-0.31446828, -0.23767215],
                         (12, 1, False): [-0.75441696, -0.53926702],
                         (21, 10, True): [0.89437269, 0.07927677],
                         (15, 7, False): [-0.49259093, -0.34166667],
                         (21, 2, True): [0.88007554, 0.24761905],
                         (15, 1, False): [-0.77145522, -0.6294602 ],
                         (13, 1, False): [-0.78043179, -0.51768489],
                         (15, 3, False): [-0.25165563, -0.35492827],
                         (16, 6, True): [-0.22058824, 0.12857143],
                         (14, 7, True): [-0.46721311, 0.08333333],
                         (16, 7, False): [-0.48803828, -0.40530303],
                         (13, 8, False): [-0.50396476, -0.31226054],
                         (20, 10, True): [0.44914676, -0.07397622],
                         (14, 3, False): [-0.24697111, -0.30293454],
                         (17, 3, False): [-0.09073813, -0.51074531],
                         (17, 2, False): [-0.16085542, -0.56299213],
                         (18, 9, True): [-0.24918033, -0.13496933],
                         (21, 8, False): [0.93473006, -1],
                         (12, 4, False): [-0.20723227, -0.25225225],
                         (14, 9, False): [-0.5503386 , -0.46466602],
                         (17, 4, False): [-0.08361692, -0.52298016],
                         (21, 4, True): [0.87358491, 0.23960396],
                         (17, 6, True): [0.03870968, 0.18120805],
                         (21, 2, False): [0.89580093, -1],
                         (14, 1, True): [-0.78512397, -0.29411765],
                         (19, 7, False): [0.60095137, -0.70378042],
                         (19, 1, False): [-0.10832497, -0.75111996],
                         (19, 5, False): [0.43205575, -0.73986152],
                         (14, 7, False): [-0.46059226, -0.38461538],
                         (21, 3, True): [0.90788224, 0.35852713],
                         (19, 9, True): [0.24, 0.05913978],
                         (21, 7, True): [0.9287576 , 0.30828516],
                         (19, 9, False): [0.30527888, -0.7151277 ],
                         (17, 10, True): [-0.48680851, -0.18573798],
                         (17, 8, True): [-0.395189 , -0.02197802],
                         (14, 6, False): [-0.13229927, -0.2707231 ],
                         (21, 6, True): [0.91550523, 0.34444444],
                         (15, 10, True): [-0.55206287, -0.15145228],
                         (14, 8, True): [-0.546875 , 0.25954198],
                         (17, 9, True): [-0.43973941, -0.11842105],
                         (16, 5, True): [-0.18900344, 0.09219858],
                         (12, 5, False): [-0.23221477, -0.20524412],
                         (17, 7, True): [-0.09688581, 0.09433962],
                         (19, 7, True): [0.65927978, 0.25146199],
                         (19, 10, True): [-0.01123596, -0.13590844],
                         (15, 2, True): [-0.2892562 , -0.05960265],
                         (14, 2, True): [-0.27350427, 0.08461538],
                         (20, 1, True): [0.16576087, -0.1185567 ],
                         (21, 1, True): [0.62393162, -0.16201117],
                         (14, 9, True): [-0.59482759, -0.03361345],
                         (21, 6, False): [0.89224806, -1],
                         (17, 4, True): [-0.01286174, -0.02580645],
                         (15, 7, True): [-4.64000000e-01, -3.46944695e-18],
                         (15, 1, True): [-0.75280899, -0.41463415],
                         (16, 9, True): [-0.49140893, -0.05759162],
                         (15, 5, True): [-0.13618677, 0.10084034],
                         (19, 5, True): [0.41944444, 0.29813665],
                         (18, 6, True): [0.23870968, 0.16326531],
                         (18, 10, True): [-0.21978022, -0.19230769],
                         (18, 8, True): [0.15041783, 0.07534247],
                         (20, 8, True): [0.81435644, 0.15346535],
                         (14, 10, True): [-0.57298908, -0.17573222],
                         (13, 10, True): [-0.57659574, -0.1264637 ],
                         (20, 6, True): [0.74715909, 0.22330097],
                         (19, 1, True): [-0.09831461, -0.02777778],
                         (16, 8, True): [-0.58389262, 0.13571429],
                         (20, 2, True): [0.64305177, 0.30508475],
                         (20, 9, True): [0.77836412, -0.04117647],
                         (13, 8, True): [-0.54700855, 0.00840336],
                         (13, 4, True): [-0.25291829, -0.05511811],
                         (13, 1, True): [-0.8122449 , -0.30327869],
                         (17, 5, True): [-0.07931034, 0.16197183],
                         (13, 3, True): [-0.29770992, -0.06730769],
                         (15, 6, True): [-0.13709677, 0.10967742],
                         (14, 3, True): [-0.23144105, 0.10769231],
                         (12, 6, True): [-0.07142857, 0.15],
                         (18, 5, True): [0.19411765, 0.06214689],
                         (18, 4, True): [0.14191419, 0.09937888],
                         (16, 7, True): [-0.43396226, -0.04516129],
                         (12, 8, True): [-0.37373737, 0.24193548],
                         (19, 4, True): [0.43490305, 0.18867925],
                         (17, 1, True): [-0.67419355, -0.34482759],
                         (19, 6, True): [0.48338369, 0.34375  ],
                         (14, 4, True): [-0.26066351, 0.10852713],
                         (18, 7, True): [0.51916376, 0.05847953],
                         (17, 2, True): [-0.16554054, -0.01333333],
                         (18, 2, True): [0.13157895, 0.19444444],
                         (20, 5, True): [0.72019465, 0.30898876],
                         (19, 3, True): [0.40524781, 0.14465409],
                         (20, 3, True): [0.68389058, 0.1761658 ],
                         (13, 9, True): [-0.52466368, -0.09016393],
                         (18, 3, True): [0.13455657, 0.16666667],
                         (19, 8, True): [0.61823362, 0.15697674],
                         (13, 6, True): [-0.18699187, 0.29213483],
                         (12, 5, True): [-0.32231405, 0.35],
                         (12, 1, True): [-0.75510204, -0.29824561],
                         (15, 8, True): [-0.55378486, 0.12711864],
                         (15, 9, True): [-0.48547718, -0.08064516],
                         (12, 10, True): [-0.56465517, -0.0078125 ],
                         (12, 3, True): [-0.14285714, 0.10714286],
                         (12, 9, True): [-0.4953271, -0.18]}

    random_policy = create_random_policy(env.action_space.n)
    Q, _ = mc_control_importance_sampling(env, num_episodes=500000, behavior_policy=random_policy)
    self.assert_float_dict_almost_equal(expected_q_values, Q, decimal=2)
  
  def assert_float_dict_almost_equal(self, a, b, decimal=6):
    for key_pair in zip(sorted(a), sorted(b)):
      self.assertTupleEqual(key_pair[0], key_pair[1])
      np.testing.assert_array_almost_equal(a[key_pair[0]], b[key_pair[1]], decimal=decimal)

class TestQLearning(unittest.TestCase):
  @classmethod
  def setUpClass(cls):
    np.random.seed(0)
    env = CliffWalkingEnv()
    cls.Q, cls.stats = q_learning(env, 500)

  def test_q_values(self):  
    expected_q_values = {36: [-13.        , -99.99847412, -13.99793134, -13.99989125],
                         24: [-13.49710026, -12.        , -13.99820799, -12.99943967],
                         12: [-12.82379343, -12.78845206, -12.6809052 , -12.68432215],
                         0: [-12.25      , -12.35247495, -12.39078253, -12.24448329],
                         1: [-11.71176481, -11.74629913, -11.93450181, -11.8367309 ],
                         2: [-11.17147528, -10.92768896, -10.98834139, -11.82520464],
                         14: [-11.11142202, -10.96755917, -10.97793159, -11.41046726],
                         3: [-10.25      , -10.08161693, -10.12084676, -11.12942917],
                         4: [-9.32727051, -9.2432254 , -9.74520199, -9.26034445],
                         5: [-8.5       , -8.35266845, -8.70257811, -8.77540643],
                         6: [-7.5       , -7.50886764, -7.60559975, -7.5479126 ],
                         7: [-6.77734375, -6.64107635, -6.78943835, -6.79408813],
                         8: [-6.30754702, -5.78547857, -5.74104174, -6.24649891],
                         19: [-6.3800348 , -5.99989625, -5.99990623, -6.63451042],
                         18: [-7.21072567, -6.99974138, -6.99986636, -8.55963877],
                         17: [-8.96059073, -7.9994099 , -7.99944799, -9.67197862],
                         16: [-9.62802058, -8.99848076, -8.9990922 , -9.75750722],
                         15: [-10.16274317,  -9.99715028,  -9.99795646, -10.80202542],
                         13: [-12.42137411, -11.9335771 , -11.95402925, -12.81399528],
                         20: [-5.96095161, -4.99996096, -4.99998729, -6.23703834],
                         9: [-5.        , -4.92796804, -4.90053431, -5.54233545],
                         10: [-4.25      , -3.96801244, -3.98320146, -4.98549087],
                         11: [-3.44148111, -3.        , -2.99619046, -3.76515198],
                         23: [-3.06648111, -2.87414416, -2.        , -2.3046875 ],
                         22: [-4.47421227, -2.99999853, -2.9999976 , -3.03710938],
                         21: [-5.41569181, -3.9999867 , -3.99998555, -5.71363213],
                         32: [ -5.99980367,  -4.        , -99.21875   ,  -5.99784381],
                         31: [ -6.99183671,  -5.        , -99.8046875 ,  -6.99960543],
                         33: [ -4.98881985,  -3.        , -99.8046875 ,  -4.97478665],
                         35: [-2.9981689 , -1.99804688, -1.        , -2.99197388],
                         34: [ -3.98397119,  -2.        , -99.8046875 ,  -3.98498535],
                         47: [ 0.,  0.,  0.,  0.],
                         37: [ 0.,  0.,  0.,  0.],
                         25: [-12.90564936, -11.        , -99.99389648, -12.97025546],
                         26: [-11.86995709, -10.        , -99.99694824, -11.94398283],
                         38: [ 0.,  0.,  0.,  0.],
                         28: [ -9.89046974,  -8.        , -99.99990463,  -9.99936445],
                         27: [-10.99496568,  -9.        , -99.99847412, -10.99690954],
                         29: [ -8.98680985,  -7.        , -99.609375  ,  -8.96609374],
                         30: [ -7.99175931,  -6.        , -99.97558594,  -7.96041614],
                         43: [ 0.,  0.,  0.,  0.],
                         40: [ 0.,  0.,  0.,  0.],
                         39: [ 0.,  0.,  0.,  0.],
                         41: [ 0.,  0.,  0.,  0.],
                         42: [ 0.,  0.,  0.,  0.],
                         45: [ 0.,  0.,  0.,  0.],
                         44: [ 0.,  0.,  0.,  0.],
                         46: [ 0.,  0.,  0.,  0.]}

    self.assert_float_dict_almost_equal(self.Q, expected_q_values, decimal=2)

  def test_rewards(self):
    expected_reward = [-112.0,
                       -100.0,
                       -109.0,
                       -109.0,
                       -164.0,
                       -113.0,
                       -122.0,
                       -123.0,
                       -114.0,
                       -74.0,
                       -111.0,
                       -135.0,
                       -112.0,
                       -148.0,
                       -130.0,
                       -134.0,
                       -180.0,
                       -159.0,
                       -123.0,
                       -66.0,
                       -75.0,
                       -106.0,
                       -41.0,
                       -103.0,
                       -127.0,
                       -114.0,
                       -61.0,
                       -23.0,
                       -74.0,
                       -68.0,
                       -38.0,
                       -40.0,
                       -102.0,
                       -24.0,
                       -129.0,
                       -62.0,
                       -54.0,
                       -26.0,
                       -119.0,
                       -29.0,
                       -34.0,
                       -20.0,
                       -61.0,
                       -23.0,
                       -128.0,
                       -52.0,
                       -17.0,
                       -40.0,
                       -110.0,
                       -19.0,
                       -36.0,
                       -32.0,
                       -38.0,
                       -17.0,
                       -21.0,
                       -33.0,
                       -120.0,
                       -113.0,
                       -119.0,
                       -111.0,
                       -32.0,
                       -34.0,
                       -29.0,
                       -19.0,
                       -25.0,
                       -17.0,
                       -25.0,
                       -15.0,
                       -16.0,
                       -126.0,
                       -25.0,
                       -19.0,
                       -16.0,
                       -17.0,
                       -102.0,
                       -21.0,
                       -15.0,
                       -29.0,
                       -19.0,
                       -13.0,
                       -20.0,
                       -112.0,
                       -102.0,
                       -104.0,
                       -29.0,
                       -100.0,
                       -13.0,
                       -13.0,
                       -17.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -25.0,
                       -109.0,
                       -17.0,
                       -105.0,
                       -13.0,
                       -13.0,
                       -108.0,
                       -100.0,
                       -104.0,
                       -111.0,
                       -15.0,
                       -101.0,
                       -123.0,
                       -104.0,
                       -13.0,
                       -13.0,
                       -102.0,
                       -15.0,
                       -100.0,
                       -13.0,
                       -108.0,
                       -102.0,
                       -103.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -14.0,
                       -13.0,
                       -17.0,
                       -14.0,
                       -13.0,
                       -103.0,
                       -13.0,
                       -107.0,
                       -13.0,
                       -13.0,
                       -110.0,
                       -15.0,
                       -13.0,
                       -100.0,
                       -110.0,
                       -21.0,
                       -104.0,
                       -106.0,
                       -15.0,
                       -18.0,
                       -109.0,
                       -18.0,
                       -109.0,
                       -104.0,
                       -16.0,
                       -105.0,
                       -13.0,
                       -13.0,
                       -17.0,
                       -21.0,
                       -13.0,
                       -17.0,
                       -13.0,
                       -21.0,
                       -106.0,
                       -17.0,
                       -13.0,
                       -18.0,
                       -13.0,
                       -105.0,
                       -14.0,
                       -113.0,
                       -103.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -22.0,
                       -14.0,
                       -13.0,
                       -13.0,
                       -17.0,
                       -109.0,
                       -15.0,
                       -111.0,
                       -13.0,
                       -16.0,
                       -13.0,
                       -100.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -13.0,
                       -107.0,
                       -103.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -17.0,
                       -110.0,
                       -13.0,
                       -17.0,
                       -13.0,
                       -13.0,
                       -108.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -110.0,
                       -13.0,
                       -13.0,
                       -108.0,
                       -111.0,
                       -13.0,
                       -103.0,
                       -13.0,
                       -100.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -104.0,
                       -19.0,
                       -13.0,
                       -13.0,
                       -102.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -18.0,
                       -13.0,
                       -13.0,
                       -113.0,
                       -107.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -105.0,
                       -13.0,
                       -13.0,
                       -111.0,
                       -15.0,
                       -13.0,
                       -105.0,
                       -15.0,
                       -105.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -105.0,
                       -14.0,
                       -13.0,
                       -14.0,
                       -15.0,
                       -19.0,
                       -105.0,
                       -102.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -108.0,
                       -13.0,
                       -15.0,
                       -16.0,
                       -13.0,
                       -103.0,
                       -110.0,
                       -13.0,
                       -25.0,
                       -18.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -21.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -102.0,
                       -17.0,
                       -15.0,
                       -111.0,
                       -15.0,
                       -15.0,
                       -15.0,
                       -14.0,
                       -113.0,
                       -104.0,
                       -103.0,
                       -106.0,
                       -14.0,
                       -13.0,
                       -107.0,
                       -109.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -17.0,
                       -19.0,
                       -100.0,
                       -111.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -16.0,
                       -14.0,
                       -14.0,
                       -13.0,
                       -107.0,
                       -104.0,
                       -15.0,
                       -13.0,
                       -107.0,
                       -17.0,
                       -13.0,
                       -103.0,
                       -100.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -100.0,
                       -13.0,
                       -19.0,
                       -15.0,
                       -16.0,
                       -17.0,
                       -107.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -16.0,
                       -13.0,
                       -106.0,
                       -17.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -104.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -103.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -23.0,
                       -17.0,
                       -103.0,
                       -105.0,
                       -14.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -17.0,
                       -17.0,
                       -17.0,
                       -15.0,
                       -13.0,
                       -109.0,
                       -106.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -107.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -105.0,
                       -105.0,
                       -14.0,
                       -17.0,
                       -13.0,
                       -13.0,
                       -106.0,
                       -13.0,
                       -14.0,
                       -15.0,
                       -13.0,
                       -15.0,
                       -16.0,
                       -19.0,
                       -20.0,
                       -15.0,
                       -13.0,
                       -103.0,
                       -13.0,
                       -13.0,
                       -16.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -106.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -17.0,
                       -16.0,
                       -15.0,
                       -15.0,
                       -19.0,
                       -106.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -111.0,
                       -14.0,
                       -17.0,
                       -14.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -104.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -100.0,
                       -15.0,
                       -17.0,
                       -107.0,
                       -104.0,
                       -13.0,
                       -107.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -15.0,
                       -100.0,
                       -17.0,
                       -102.0,
                       -13.0,
                       -13.0,
                       -105.0,
                       -100.0,
                       -111.0,
                       -15.0,
                       -17.0,
                       -15.0,
                       -13.0,
                       -108.0,
                       -17.0,
                       -13.0,
                       -19.0,
                       -13.0,
                       -17.0,
                       -19.0,
                       -17.0,
                       -13.0,
                       -15.0,
                       -105.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -100.0,
                       -16.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -15.0,
                       -26.0,
                       -15.0,
                       -17.0,
                       -13.0,
                       -13.0,
                       -15.0,
                       -13.0,
                       -13.0,
                       -114.0,
                       -23.0,
                       -17.0,
                       -17.0,
                       -17.0,
                       -15.0]
    np.testing.assert_array_almost_equal(self.stats[1], expected_reward, decimal=2)

  def assert_float_dict_almost_equal(self, a, b, decimal=6):
    for key_pair in zip(sorted(a), sorted(b)):
      self.assertEqual(key_pair[0], key_pair[1])
      np.testing.assert_array_almost_equal(a[key_pair[0]], b[key_pair[1]], decimal=decimal)

if __name__ == '__main__':
  unittest.main()